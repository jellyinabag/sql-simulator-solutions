/*
Задание:
Для каждого дня в таблицах orders и user_actions рассчитайте следующие показатели:
- Выручку, полученную в этот день.
- Выручку с заказов новых пользователей, полученную в этот день.
- Долю выручки с заказов новых пользователей в общей выручке, полученной за этот день.
- Долю выручки с заказов остальных пользователей в общей выручке, полученной за этот день.
Колонки с показателями назовите соответственно revenue, new_users_revenue, new_users_revenue_share, old_users_revenue_share. Колонку с датами назовите date. 
Все показатели долей необходимо выразить в процентах. При их расчёте округляйте значения до двух знаков после запятой.
Результат должен быть отсортирован по возрастанию даты.
Поля в результирующей таблице: date, revenue, new_users_revenue, new_users_revenue_share, old_users_revenue_share
*/

with unnest_products as (SELECT creation_time::date as date,
                                unnest(product_ids) as product_id
                         FROM   orders
                         WHERE  order_id not in (SELECT order_id
                                                 FROM   user_actions
                                                 WHERE  action = 'cancel_order')), prices as (SELECT date,
                                                    price,
                                                    products.product_id
                                             FROM   products join unnest_products using(product_id)), revenue_per_day as (SELECT date,
                                                                                    sum(price) as revenue
                                                                             FROM   prices
                                                                             GROUP BY date), new_users as (SELECT user_id,
                                     (min(time))::date as min_date
                              FROM   user_actions
                              GROUP BY user_id), new_users_orders as (SELECT order_id
                                        FROM   user_actions join new_users
                                                ON new_users.user_id = user_actions.user_id and
                                                   new_users.min_date = user_actions.time::date
                                        WHERE  action = 'create_order'
                                           and order_id not in (SELECT order_id
                                                             FROM   user_actions
                                                             WHERE  action = 'cancel_order')), new_users_products as (SELECT creation_time::date as date,
                                                                unnest(product_ids) as product_id
                                                         FROM   orders
                                                         WHERE  order_id not in (SELECT order_id
                                                                                 FROM   user_actions
                                                                                 WHERE  action = 'cancel_order')
                                                            and order_id in (SELECT order_id
                                                                          FROM   new_users_orders)), new_users_prices as (SELECT date,
                                                       price,
                                                       products.product_id
                                                FROM   products join new_users_products using(product_id)), new_users_revenue as (SELECT date,
                                                                                         sum(price) as new_users_revenue
                                                                                  FROM   new_users_prices
                                                                                  GROUP BY date)
SELECT new_users_revenue.date,
       revenue,
       new_users_revenue,
       round(new_users_revenue * 100 / revenue::decimal, 2) as new_users_revenue_share,
       round(100 - (new_users_revenue * 100 / revenue::decimal),
             2) as old_users_revenue_share
FROM   revenue_per_day join new_users_revenue using(date)
ORDER BY date
