/*
Задание:
Дополните запрос из предыдущего задания и теперь для каждого дня, представленного в таблицах user_actions и courier_actions, дополнительно рассчитайте следующие показатели:
- Прирост числа новых пользователей.
- Прирост числа новых курьеров.
- Прирост общего числа пользователей.
- Прирост общего числа курьеров.
Показатели, рассчитанные на предыдущем шаге, также включите в результирующую таблицу.
Колонки с новыми показателями назовите соответственно new_users_change, new_couriers_change, total_users_growth, total_couriers_growth. Колонку с датами назовите date.
Все показатели прироста считайте в процентах относительно значений в предыдущий день. При расчёте показателей округляйте значения до двух знаков после запятой.
Результирующая таблица должна быть отсортирована по возрастанию даты.
Поля в результирующей таблице: 
date, new_users, new_couriers, total_users, total_couriers, new_users_change, new_couriers_change, total_users_growth, total_couriers_growth
*/

with date_users as (SELECT (min(time))::date as date,
                           user_id
                    FROM   user_actions
                    GROUP BY user_id), count_users as (SELECT date,
                                          count(user_id) as new_users
                                   FROM   date_users
                                   GROUP BY date), date_couriers as (SELECT (min(time))::date as date,
                                         courier_id
                                  FROM   courier_actions
                                  GROUP BY courier_id), count_couriers as (SELECT date,
                                                count(courier_id) as new_couriers
                                         FROM   date_couriers
                                         GROUP BY date)
SELECT date,
       new_users,
       new_couriers,
       total_users,
       total_couriers,
       new_users_change,
       new_couriers_change,
       round(((total_users - lag(total_users, 1) OVER(ORDER BY date))::decimal / lag(total_users, 1) OVER(ORDER BY date)) * 100,
             2) as total_users_growth,
       round(((total_couriers - lag(total_couriers, 1) OVER(ORDER BY date))::decimal / lag(total_couriers, 1) OVER(ORDER BY date)) * 100,
             2) as total_couriers_growth
FROM   (SELECT count_users.date,
               new_users,
               new_couriers,
               (sum(new_users) OVER(ORDER BY date rows between unbounded preceding and current row))::integer as total_users,
               (sum(new_couriers) OVER(ORDER BY date rows between unbounded preceding and current row))::integer as total_couriers,
               round(((new_users - lag(new_users, 1) OVER(ORDER BY date))::decimal / lag(new_users, 1) OVER(ORDER BY date)) * 100,
                     2) as new_users_change,
               round(((new_couriers - lag(new_couriers, 1) OVER(ORDER BY date))::decimal / lag(new_couriers, 1) OVER(ORDER BY date)) * 100,
                     2) as new_couriers_change
        FROM   count_users full join count_couriers using(date)) as joined_table
ORDER BY date
