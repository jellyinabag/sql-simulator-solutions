/*
Задание:
Для каждого дня, представленного в таблицах user_actions и courier_actions, рассчитайте следующие показатели:
- Число платящих пользователей.
- Число активных курьеров.
- Долю платящих пользователей в общем числе пользователей на текущий день.
- Долю активных курьеров в общем числе курьеров на текущий день.
Колонки с показателями назовите соответственно paying_users, active_couriers, paying_users_share, active_couriers_share. 
Колонку с датами назовите date. Проследите за тем, чтобы абсолютные показатели были выражены целыми числами. Все показатели долей необходимо выразить в процентах. 
При их расчёте округляйте значения до двух знаков после запятой.
Результат должен быть отсортирован по возрастанию даты. 
Поля в результирующей таблице: date, paying_users, active_couriers, paying_users_share, active_couriers_share
*/

with users_and_orders as (SELECT user_id,
                                 time::date as date
                          FROM   user_actions
                          WHERE  action = 'create_order'
                             and order_id not in (SELECT order_id
                                               FROM   user_actions
                                               WHERE  action = 'cancel_order')), users_per_day as (SELECT date,
                                                           count(distinct user_id) as paying_users
                                                    FROM   users_and_orders
                                                    GROUP BY date), couriers_and_orders as (SELECT courier_id,
                                               time::date as date
                                        FROM   courier_actions
                                        WHERE  (action = 'accept_order'
                                           and order_id in (SELECT order_id
                                                         FROM   courier_actions
                                                         WHERE  action = 'deliver_order'))
                                            or action = 'deliver_order'), couriers_per_day as (SELECT date,
                                                          count(distinct courier_id) as active_couriers
                                                   FROM   couriers_and_orders
                                                   GROUP BY date), date_users as (SELECT min(time)::date as date,
                                      user_id
                               FROM   user_actions
                               GROUP BY user_id), count_users as (SELECT date,
                                          count(user_id) as new_users
                                   FROM   date_users
                                   GROUP BY date), date_couriers as (SELECT min(time)::date as date,
                                         courier_id
                                  FROM   courier_actions
                                  GROUP BY courier_id), count_couriers as (SELECT date,
                                                count(courier_id) as new_couriers
                                         FROM   date_couriers
                                         GROUP BY date), joined_table as (SELECT count_users.date,
                                        new_users,
                                        new_couriers,
                                        (sum(new_users) OVER(ORDER BY date rows between unbounded preceding and current row))::integer as total_users,
                                        (sum(new_couriers) OVER(ORDER BY date rows between unbounded preceding and current row))::integer as total_couriers,
                                        round(((new_users - lag(new_users, 1) OVER(ORDER BY date))::decimal / lag(new_users, 1) OVER(ORDER BY date)) * 100,
                                              2) as new_users_change,
                                        round(((new_couriers - lag(new_couriers, 1) OVER(ORDER BY date))::decimal / lag(new_couriers, 1) OVER(ORDER BY date)) * 100,
                                              2) as new_couriers_change
                                 FROM   count_users full join count_couriers using(date))
SELECT couriers_per_day.date,
       coalesce(users_per_day.paying_users, 0)::integer as paying_users,
       coalesce(couriers_per_day.active_couriers, 0)::integer as active_couriers,
       round(coalesce(100.0 * users_per_day.paying_users / nullif(joined_table.total_users, 0), 0),
             2) as paying_users_share,
       round(coalesce(100.0 * couriers_per_day.active_couriers / nullif(joined_table.total_couriers, 0), 0),
             2) as active_couriers_share
FROM   couriers_per_day full join users_per_day using(date) full join joined_table using(date)
ORDER BY date
